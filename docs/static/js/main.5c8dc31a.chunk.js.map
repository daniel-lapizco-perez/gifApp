{"version":3,"sources":["componentes/AddCategory.js","helpers/getGifs.js","componentes/GifGridItem.js","componentes/GifGrid.js","hooks/useGetGifs.js","GifApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","console","log","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gif","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useGetGifs","GifApp","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,MAKlB,SACI,uBACIO,KAAO,OACPC,MAAQT,EACRU,SAnBa,SAACP,GACtBF,EAAcE,EAAEQ,OAAOF,OACvBG,QAAQC,IAAIV,EAAEQ,OAAOF,a,+BCThBK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,0FAC4EC,UAAUH,GADtF,sBAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAMD,EAAKE,KAAI,SAAAC,GACjB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QATtB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAChC,OACI,sBAAKc,UAAU,2CAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IAEpB,4BAAIA,QCHHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAErB,ECHsB,SAACA,GACvB,MAA0BhB,mBAAS,CAC/BuB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAoBA,OAdAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAC,GACFC,YAAW,WACPJ,EAAS,CACLf,KAAMkB,EACNL,SAAQ,MAEb,UAGZ,CAACpB,IAGGqB,EDlBwBM,CAAW3B,GAA9Ba,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QACpB,OAEI,qCACI,qBAAIJ,UAAU,kCAAd,cAAkDhB,EAAlD,OAECoB,GAAW,mBAAGJ,UAAU,mCAAb,yBACZ,qBAAKA,UAAU,YAAf,SAIQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAE,EAAF,eAEQA,GADCA,EAAIC,aEWtBiB,EA1BA,WAEX,MAAoC5C,mBAAS,CAAC,oBAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAEA,OACG,qCACC,8CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBAGA,6BAEQS,EAAWiB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAYA,GADLA,YCd/B6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5c8dc31a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState(''); // se debe de dejar como string vacio, ya que si no se pone nada, en consola arroja error\r\n\r\n    const handleInputValue = (e) => {\r\n        setInputValue(e.target.value);\r\n        console.log(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(categories => [inputValue, ...categories]);\r\n            setInputValue('')\r\n        }\r\n    }\r\n\r\n    return(\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type = \"text\"\r\n                value= {inputValue}\r\n                onChange = {handleInputValue}\r\n            />\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=WG6AimsOYl7vdiRqri91STfK7deaCZqO&q=${encodeURI(category)}&limit=10`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gif = data.map(img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return(gif);\r\n}","import React from 'react';\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n    return(\r\n        <div className=\" card animate__animated animate__shakeX \">\r\n            <img src={url} alt={title}></img>\r\n            \r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { useGetGifs } from \"../hooks/useGetGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images, loading} = useGetGifs(category)\r\n    return(\r\n        \r\n        <>\r\n            <h3 className=\"animate__animated animate__tada\"> {category} </h3>\r\n\r\n            {loading && <p className=\"animate__animated animate__flash\">Cargando...</p>}\r\n            <div className=\"card-grid\">\r\n                \r\n\r\n                {\r\n                    images.map(img => (\r\n                        < GifGridItem \r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}","import { useState, useEffect } from \"react\"\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\nexport const useGetGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    \r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setTimeout(() => {\r\n                    setState({\r\n                        data: imgs,\r\n                        loading:false\r\n                    })\r\n                }, 3000)\r\n            });\r\n            // .then(setImages) //esto es exactamente lo mismo que lo de arriba\r\n    }, [category])\r\n\r\n\r\n    return state;\r\n}","import React, {useState} from \"react\";\r\nimport { AddCategory } from \"./componentes/AddCategory\";\r\nimport { GifGrid } from \"./componentes/GifGrid\";\r\n\r\nconst GifApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['High School dxd']);\r\n\r\n    return (\r\n       <>\r\n        <h2>GifExpertApp</h2> \r\n        <AddCategory setCategories = {setCategories}/>\r\n        <hr></hr>\r\n\r\n\r\n        <ol>\r\n            {\r\n                categories.map(category =>( \r\n                    <GifGrid \r\n                        key = {category}\r\n                        category = {category}\r\n                    />\r\n                ))\r\n            }\r\n        </ol>\r\n\r\n       </>\r\n    )\r\n}\r\n\r\nexport default GifApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifApp from './GifApp';\n\nReactDOM.render(\n  <GifApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}